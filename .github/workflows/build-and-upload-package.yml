name: Build and upload Package

run-name: 'Package: ${{ github.ref_name }}_${{ github.run_id }}_${{ github.run_attempt }}'

on:
  # push:
  #   branches: ['master']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - test

permissions:
  contents: read
  id-token: write
  actions: write

jobs:
  package:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    outputs:
      build-number: ${{ steps.package-default-version.outputs.version }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: List files and directories for debug
        run: |
          echo "Listing root directory contents:"
          ls -l
          echo "Listing cloudformation directory contents:"
          ls -l cloudformation || echo "cloudformation directory not found"
          echo "Listing forge-files directory contents:"
          ls -l forge-files || echo "forge-files directory not found"

      - id: package-default-version
        name: Get Default Version outputs
        run: echo "::set-output name=version::$(date +'%Y%m%d%H%M%S')"

      - id: package-create
        name: Package
        run: |
          mkdir -p package
          [ -d cloudformation ] && cp -r cloudformation package/
          [ -d forge-files ] && cp -r forge-files package/
          [ -f README.md ] && cp README.md package/
          cd package
          zip -r ../${{ steps.package-default-version.outputs.version }}.zip ./
          cd ..

      - id: package-upload
        name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package-default-version.outputs.version }}
          path: ${{ steps.package-default-version.outputs.version }}.zip
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set Environment Variables
        run: |
          if [ "${{ github.event.inputs.environment }}" == "development" ]; then
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "ARTIFACT_KEY=${{ vars.ARTIFACT_KEY }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_KEY=${{ vars.DEPLOYMENT_KEY }}" >> $GITHUB_ENV
            echo "ENVIRONMENT_KEY=${{ vars.ENVIRONMENT_KEY }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "test" ]; then
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "ARTIFACT_KEY=${{ vars.ARTIFACT_KEY }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_KEY=${{ vars.DEPLOYMENT_KEY }}" >> $GITHUB_ENV
            echo "ENVIRONMENT_KEY=${{ vars.ENVIRONMENT_KEY }}" >> $GITHUB_ENV
          fi
